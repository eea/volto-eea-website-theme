diff --git a/src/customizations/volto/actions/vocabularies/vocabularies.test.js b/src/customizations/volto/actions/vocabularies/vocabularies.test.js
index b7deafc..ca4fc8a 100644
--- a/src/customizations/volto/actions/vocabularies/vocabularies.test.js
+++ b/src/customizations/volto/actions/vocabularies/vocabularies.test.js
@@ -17,7 +17,7 @@ describe('Vocabularies actions', () => {
     });
     it('should create an action to get a vocabulary if a URL is passed', () => {
       const vocabNameOrURL =
-        'http://localhost:8080/@vocabularies/plone.app.vocabularies.Keywords';
+        'http://localhost:3000/@vocabularies/plone.app.vocabularies.Keywords';
       const query = 'john';
       const action = getVocabulary({ vocabNameOrURL, query });

@@ -30,7 +30,7 @@ describe('Vocabularies actions', () => {
     });
     it('should create an action to get a vocabulary if a URL with path is passed', () => {
       const vocabNameOrURL =
-        'http://localhost:8080/de/foo/bar/@vocabularies/plone.app.vocabularies.Keywords';
+        'http://localhost:3000/de/foo/bar/@vocabularies/plone.app.vocabularies.Keywords';
       const query = 'john';
       const action = getVocabulary({ vocabNameOrURL, query });

@@ -38,19 +38,19 @@ describe('Vocabularies actions', () => {
       expect(action.vocabulary).toEqual(vocabNameOrURL);
       expect(action.request.op).toEqual('get');
       expect(action.request.path).toEqual(
-        `/@vocabularies/plone.app.vocabularies.Keywords?b_start=0&title=${query}`,
+        `/de/foo/bar/@vocabularies/plone.app.vocabularies.Keywords?b_start=0&title=${query}`,
       );
     });
     it('should create an action to get a vocabulary if an b_size=-1 is passed', () => {
       const vocabNameOrURL =
-        'http://localhost:8080/de/foo/bar/@vocabularies/plone.app.vocabularies.Keywords';
+        'http://localhost:3000/de/foo/bar/@vocabularies/plone.app.vocabularies.Keywords';
       const action = getVocabulary({ vocabNameOrURL, size: -1 });

       expect(action.type).toEqual(GET_VOCABULARY);
       expect(action.vocabulary).toEqual(vocabNameOrURL);
       expect(action.request.op).toEqual('get');
       expect(action.request.path).toEqual(
-        `/@vocabularies/plone.app.vocabularies.Keywords?b_start=0&b_size=-1`,
+        `/de/foo/bar/@vocabularies/plone.app.vocabularies.Keywords?b_start=0&b_size=-1`,
       );
     });
   });
